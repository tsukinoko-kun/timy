// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package db

import (
	"context"
)

const addTime = `-- name: AddTime :exec
INSERT INTO times (timespan, year, month, day_of_month) VALUES (?, ?, ?, ?)
`

// AddTime
//
//	INSERT INTO times (timespan, year, month, day_of_month) VALUES (?, ?, ?, ?)
func (q *Queries) AddTime(ctx context.Context, timespan string, year int64, month int64, dayOfMonth int64) error {
	_, err := q.db.ExecContext(ctx, addTime,
		timespan,
		year,
		month,
		dayOfMonth,
	)
	return err
}

const getTimesYear = `-- name: GetTimesYear :many
SELECT timespan FROM times WHERE year = ?
`

// GetTimesYear
//
//	SELECT timespan FROM times WHERE year = ?
func (q *Queries) GetTimesYear(ctx context.Context, year int64) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getTimesYear, year)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var timespan string
		if err := rows.Scan(&timespan); err != nil {
			return nil, err
		}
		items = append(items, timespan)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getTimesYearMonth = `-- name: GetTimesYearMonth :many
SELECT timespan FROM times WHERE year = ? AND month = ?
`

// GetTimesYearMonth
//
//	SELECT timespan FROM times WHERE year = ? AND month = ?
func (q *Queries) GetTimesYearMonth(ctx context.Context, year int64, month int64) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getTimesYearMonth, year, month)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var timespan string
		if err := rows.Scan(&timespan); err != nil {
			return nil, err
		}
		items = append(items, timespan)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getTimesYearMonthDay = `-- name: GetTimesYearMonthDay :many
SELECT timespan FROM times WHERE year = ? AND month = ? AND day_of_month = ?
`

// GetTimesYearMonthDay
//
//	SELECT timespan FROM times WHERE year = ? AND month = ? AND day_of_month = ?
func (q *Queries) GetTimesYearMonthDay(ctx context.Context, year int64, month int64, dayOfMonth int64) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getTimesYearMonthDay, year, month, dayOfMonth)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var timespan string
		if err := rows.Scan(&timespan); err != nil {
			return nil, err
		}
		items = append(items, timespan)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
